# -*- mode: sh; sh-shell: bash -*-
PYTHON3_VERSION=3.9
inherit python3 cmake

BUILD_REQUIRES="  cmake flexdll libisl-devel python39-devel python39-alabaster python39-yaml"

NAME="llvm"
VERSION="12.0.1"
RELEASE="1"
CATEGORY="Libs"
SUMMARY="LLVM bytecode interpreter and toolchain"
DESCRIPTION="The LLVM Core libraries provide a modern source- and target-
independent optimizer, along with code generation support for many popular CPUs
(as well as some less common ones!) These libraries are built around a well
specified code representation known as the LLVM intermediate representation."
HOMEPAGE="http://www.llvm.org/"
SRC_URI="
  https://github.com/llvm/llvm-project/releases/download/llvmorg-${PV}/${P}.src.tar.xz
  https://github.com/llvm/llvm-project/releases/download/llvmorg-${PV}/polly-${PV}.src.tar.xz
"
SRC_DIR="${P}.src"
PATCH_URI="
  fedora/0001-PATCH-llvm-Make-source-interleave-prefix-test-case-c.patch
  8.0.1-cmodel-medium.patch
  8.0.1-llvm-config.patch
  8.0.1-as-needed-shared.patch
  8.0.1-polly-cmake.patch
  8.0.1-polly-system-isl.patch
  9.0.1-tools-shared.patch
  9.0.1-limits.patch
  10.0.1-polly-link.patch
  12.0.1-cygming-fp-stackifier.patch
  12.0.1-cygming-nm-version-option.patch
  12.0.1-cygming-dlltool-default-target.patch
  12.0.1-emutls-vs-autoimport.patch
"

RESTRICT="debuginfo"

PKG_NAMES="llvm libllvm12 libllvm-devel
  libpolly12 libpolly-devel"
llvm_CATEGORY="Interpreters"
llvm_CONTENTS="
  --exclude=llvm-config*
  --exclude=llvm-tblgen*
  --exclude=html
  usr/bin/bugpoint.exe
  usr/bin/count.exe
  usr/bin/dsymutil.exe
  usr/bin/FileCheck.exe
  usr/lib/LLVMPolly.dll
  usr/bin/llc.exe
  usr/bin/lli.exe
  usr/bin/lli-child-target.exe
  usr/bin/llvm-*
  usr/bin/not.exe
  usr/bin/obj2yaml.exe
  usr/bin/opt.exe
  usr/bin/sancov.exe
  usr/bin/sanstats.exe
  usr/bin/split-file.exe
  usr/bin/verify-uselistorder.exe
  usr/bin/yaml-bench.exe
  usr/bin/yaml2obj.exe
  usr/share/doc/${NAME}
  usr/share/opt-viewer/
"
libllvm12_SUMMARY="LLVM library (runtime)"
libllvm12_CONTENTS="
  usr/bin/cygLLVM*-12.dll
"
libllvm_devel_SUMMARY="LLVM library (development)"
libllvm_devel_OBSOLETES="libllvm-devel-static"
libllvm_devel_REQUIRES="llvm"
#  --exclude=LLVMStaticExports*.cmake
#  --exclude=LLVMTestExports*.cmake
libllvm_devel_CONTENTS="
  usr/bin/llvm-config*
  usr/bin/llvm-tblgen*
  usr/include/llvm*
  usr/lib/cmake/llvm/
  usr/lib/libLLVM*.dll.a
"
libllvm_devel_static_SUMMARY="LLVM library (static libraries)"
libllvm_devel_static_REQUIRES="libllvm-devel"
libllvm_devel_static_CONTENTS="
  usr/lib/cmake/llvm/LLVMStaticExports*.cmake
  usr/lib/libLLVM[A-Za-z]*.a
"
libpolly12_SUMMARY="LLVM loop optimizer library"
libpolly12_CONTENTS="usr/bin/cygPolly*-12.dll"
libpolly_devel_SUMMARY=${libpolly12_SUMMARY}
libpolly_devel_REQUIRES="llvm libisl-devel libllvm-devel"
libpolly_devel_CONTENTS="
  usr/include/polly/
  usr/lib/cmake/polly/
  usr/lib/libPolly*.dll.a
"

CYGPORT_USE_UNSTABLE_API=1
src_unpack_hook() {
    [ -d tools/polly ] && find tools/polly -delete
    mv ../polly-${PV}.src tools/polly
    pushd tools/polly
    mkdir -p include/polly/isl
    cp -f lib/External/isl/include/isl/isl-noexceptions.h include/polly/isl/
    popd
}

src_compile() {
    # leave optimization to build system, fails to dlopen with -O2
    CFLAGS=${CFLAGS/-O[0-9]/}
    CXXFLAGS=${CXXFLAGS/-O[0-9]/}

    cd ${B}
    CYGCMAKE_GENERATOR="Ninja" \
    cygcmake \
      -DBUILD_SHARED_LIBS=ON \
      -DLLVM_TARGETS_TO_BUILD=X86 \
      -DLLVM_ENABLE_LIBCXX=OFF \
      -DLLVM_ENABLE_ZLIB=ON \
      -DLLVM_ENABLE_FFI=ON \
      -DLLVM_ENABLE_RTTI=ON \
      -DLLVM_INCLUDE_TOOLS=ON -DLLVM_BUILD_TOOLS=ON \
      -DLLVM_INCLUDE_TESTS=OFF -DLLVM_BUILD_TESTS=OFF \
      -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_BUILD_EXAMPLES=OFF \
      -DLLVM_INCLUDE_UTILS=ON -DLLVM_BUILD_UTILS=ON -DLLVM_INSTALL_UTILS=ON \
      -DLLVM_INCLUDE_DOCS=OFF -DLLVM_BUILD_DOCS=OFF \
      -DLLVM_ENABLE_SPHINX=OFF \
      -DLLVM_ENABLE_DOXYGEN=OFF \
      -DLLVM_BUILD_LLVM_DYLIB=OFF -DLLVM_LINK_LLVM_DYLIB=OFF \
      -DLLVM_BUILD_EXTERNAL_COMPILER_RT=OFF \
      -DPOLLY_BUNDLED_ISL=OFF \
      -DPYTHON_EXECUTABLE=${PYTHON3}
    cygninja
}

src_install() {
    cd ${B}
    ninja_install

    # Polly has its own cmake macros
    sed -e '/_cmake_expected_target /s/[^ ]*Polly[^ ]*//g;/PollyPPCG/,/^#.*sancov/d' \
	-i ${D}/usr/lib/cmake/llvm/LLVMExports*.cmake
}
