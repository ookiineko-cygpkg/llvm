From https://github.com/msys2/MINGW-packages/commit/8b02331b878dd643c6ba4ac774610081d7586d78

--- origsrc/llvm-12.0.1.src/test/tools/llvm-nm/libtool-version.test
+++ src/llvm-12.0.1.src/test/tools/llvm-nm/libtool-version.test
@@ -0,0 +1,5 @@
+RUN: llvm-nm -V | FileCheck %s
+RUN: llvm-nm --version | FileCheck %s
+Check that the output of llvm-nm -V (and --version) contains the text
+"GNU" somewhere, to let libtool know that it is compatible with GNU nm.
+CHECK: GNU
--- origsrc/llvm-12.0.1.src/tools/llvm-nm/llvm-nm.cpp
+++ src/llvm-12.0.1.src/tools/llvm-nm/llvm-nm.cpp
@@ -224,6 +224,8 @@ cl::opt<bool> AddInlinedInfo("add-inlinedinfo",
                                       "TBD(Mach-O) only"),
                              cl::cat(NMCat));
 
+cl::opt<bool> Version("V", cl::desc("Print version info"), cl::cat(NMCat));
+
 cl::extrahelp HelpResponse("\nPass @FILE as argument to read options from FILE.\n");
 
 bool PrintAddress = true;
@@ -2230,11 +2232,22 @@ static void dumpSymbolNamesFromFile(std::string &Filename) {
   }
 }
 
+static void printExtraVersionInfo(raw_ostream &outs) {
+  outs << "llvm-nm, compatible with GNU nm\n";
+}
+
 int main(int argc, char **argv) {
   InitLLVM X(argc, argv);
   cl::HideUnrelatedOptions(NMCat);
+  cl::AddExtraVersionPrinter(printExtraVersionInfo);
   cl::ParseCommandLineOptions(argc, argv, "llvm symbol table dumper\n");
 
+  if (Version) {
+    printExtraVersionInfo(outs());
+    cl::PrintVersionMessage();
+    return 0;
+  }
+
   // llvm-nm only reads binary files.
   if (error(sys::ChangeStdinToBinary()))
     return 1;
